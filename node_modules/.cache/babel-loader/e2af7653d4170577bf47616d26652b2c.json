{"ast":null,"code":"var _jsxFileName = \"/home/ayrton/Escritorio/onboarding-personal/swapi-refactor-todo/src/App.js\";\nimport React from 'react';\nimport PlanetTable from './components/PlanetTable';\nimport UserInput from './components/UserInput';\nimport MainHeader from './components/MainHeader';\nimport Planet from './entities/Planet';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlanetFetch = async planetId => {\n      try {\n        const newPlanet = await this.fetchPlanetById(planetId);\n        const {\n          planetCollection\n        } = this.state;\n        planetCollection.push(newPlanet);\n        this.setState({\n          planetCollection\n        });\n      } catch (e) {\n        alert('Error al descargar el planeta: ' + e);\n      }\n    };\n\n    this.state = {\n      planetCollection: []\n    };\n  }\n  /*async componentDidMount() {\n    try{\n      const planetOne = await (await axios.get('https://swapi.dev/api/planets/1/')).data;\n      const newPlanet = new Planet(planetOne.name, planetOne.terrain, planetOne.rotation_period > 24);\n      this.addNewPlanetToCollection(newPlanet);\n    }\n    catch(e){\n      console.log('Error al descargar el planeta: ' + e);\n    }\n  };*/\n\n\n  async fetchPlanetById(id) {\n    const fetchedPlanet = await axios.get(`https://swapi.dev/api/starships/${id}/`);\n    const {\n      name,\n      terrain,\n      rotation_period\n    } = fetchedPlanet.data;\n    return new Planet(name, terrain, rotation_period > 24);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MainHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UserInput, {\n      onFetchPlanet: this.handlePlanetFetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(PlanetTable, {\n      planetCollection: this.state.planetCollection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ayrton/Escritorio/onboarding-personal/swapi-refactor-todo/src/App.js"],"names":["React","PlanetTable","UserInput","MainHeader","Planet","axios","App","Component","constructor","props","handlePlanetFetch","planetId","newPlanet","fetchPlanetById","planetCollection","state","push","setState","e","alert","id","fetchedPlanet","get","name","terrain","rotation_period","data","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,iBAxBmB,GAwBC,MAAOC,QAAP,IAAoB;AACtC,UAAI;AACF,cAAMC,SAAS,GAAG,MAAM,KAAKC,eAAL,CAAqBF,QAArB,CAAxB;AACA,cAAM;AAAEG,UAAAA;AAAF,YAAuB,KAAKC,KAAlC;AACAD,QAAAA,gBAAgB,CAACE,IAAjB,CAAsBJ,SAAtB;AACA,aAAKK,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACD,OALD,CAMA,OAAOI,CAAP,EAAU;AACRC,QAAAA,KAAK,CAAC,oCAAoCD,CAArC,CAAL;AACD;AACF,KAlCkB;;AAEjB,SAAKH,KAAL,GAAa;AACXD,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAGD;AAED;;;;;;;;;;;;AAWA,QAAMD,eAAN,CAAsBO,EAAtB,EAA0B;AACxB,UAAMC,aAAa,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,mCAAkCF,EAAG,GAAhD,CAA5B;AACA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAqCJ,aAAa,CAACK,IAAzD;AACA,WAAO,IAAItB,MAAJ,CAAWmB,IAAX,EAAiBC,OAAjB,EAA0BC,eAAe,GAAG,EAA5C,CAAP;AACD;;AAcDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,aAAa,EAAE,KAAKjB,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKK,KAAL,CAAWD,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,CADF;AAWD;;AAjD+B;;AAoDlC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport PlanetTable from './components/PlanetTable';\nimport UserInput from './components/UserInput';\nimport MainHeader from './components/MainHeader';\nimport Planet from './entities/Planet';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planetCollection: [],\n    };\n  }\n\n  /*async componentDidMount() {\n    try{\n      const planetOne = await (await axios.get('https://swapi.dev/api/planets/1/')).data;\n      const newPlanet = new Planet(planetOne.name, planetOne.terrain, planetOne.rotation_period > 24);\n      this.addNewPlanetToCollection(newPlanet);\n    }\n    catch(e){\n      console.log('Error al descargar el planeta: ' + e);\n    }\n  };*/\n\n  async fetchPlanetById(id) {\n    const fetchedPlanet = await axios.get(`https://swapi.dev/api/starships/${id}/`);\n    const { name, terrain, rotation_period } = fetchedPlanet.data;\n    return new Planet(name, terrain, rotation_period > 24);\n  };\n\n  handlePlanetFetch = async (planetId) => {\n    try {\n      const newPlanet = await this.fetchPlanetById(planetId);\n      const { planetCollection } = this.state;\n      planetCollection.push(newPlanet);\n      this.setState({ planetCollection });\n    }\n    catch (e) {\n      alert('Error al descargar el planeta: ' + e);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <MainHeader />\n          <div className=\"row\">\n            <UserInput onFetchPlanet={this.handlePlanetFetch} />\n            <PlanetTable planetCollection={this.state.planetCollection} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}